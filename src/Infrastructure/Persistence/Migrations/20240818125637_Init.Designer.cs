// <auto-generated />
using System;
using Infrastructure.Persistence.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240818125637_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0-preview.7.24405.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Entities.Department", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModifiedDate");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Name");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Name" }, "UK_Departments_Name")
                        .IsUnique();

                    b.ToTable("Departments", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("f5fd7e8f-0a7e-41d1-81ae-945b5b675f5d"),
                            CreatedDate = new DateTime(2024, 8, 18, 12, 56, 33, 492, DateTimeKind.Utc).AddTicks(168),
                            Name = "Yönetim Departmanı"
                        },
                        new
                        {
                            Id = new Guid("34c0160d-6db5-40c5-8597-e81318d38b8b"),
                            CreatedDate = new DateTime(2024, 8, 18, 12, 56, 33, 492, DateTimeKind.Utc).AddTicks(332),
                            Name = "İnsan Kaynakları Departmanı"
                        },
                        new
                        {
                            Id = new Guid("78ede17c-6d8a-4f89-b0ef-eee8729c4d20"),
                            CreatedDate = new DateTime(2024, 8, 18, 12, 56, 33, 492, DateTimeKind.Utc).AddTicks(334),
                            Name = "Bilgi İşlem Departmanı"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Employee", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("Address");

                    b.Property<bool>("Asset")
                        .HasColumnType("bit")
                        .HasColumnName("Asset");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("BirthDate");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime>("DateOfEntry")
                        .HasColumnType("datetime2")
                        .HasColumnName("DateOfEntry");

                    b.Property<Guid>("DepartmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Email");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("FirstName");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)")
                        .HasColumnName("Gender");

                    b.Property<string>("GraduatedField")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("GraduatedField");

                    b.Property<string>("GraduatedSchool")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("GraduatedSchool");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModifiedDate");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("LastName");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("Phone");

                    b.Property<Guid>("PositionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Status")
                        .HasColumnType("bit")
                        .HasColumnName("Status");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("PositionId");

                    b.ToTable("Employees", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("57314315-7127-431d-a144-29379e6f5c3b"),
                            Address = "büyükçekmece",
                            Asset = true,
                            BirthDate = new DateTime(2024, 8, 18, 12, 56, 33, 494, DateTimeKind.Utc).AddTicks(9001),
                            CreatedDate = new DateTime(2024, 8, 18, 12, 56, 33, 494, DateTimeKind.Utc).AddTicks(9394),
                            DateOfEntry = new DateTime(2024, 8, 18, 12, 56, 33, 494, DateTimeKind.Utc).AddTicks(9101),
                            DepartmentId = new Guid("78ede17c-6d8a-4f89-b0ef-eee8729c4d20"),
                            Email = "hurdenizyener@gmail.com",
                            FirstName = "Hürdeniz",
                            Gender = "Erkek",
                            GraduatedField = "Bilgisayar Program",
                            GraduatedSchool = "Hitit Üniversitesi",
                            LastName = "Yener",
                            Phone = "0111-111-11-11",
                            PositionId = new Guid("990765cd-4d42-4a50-9371-88ed24959cb4"),
                            Status = true
                        });
                });

            modelBuilder.Entity("Domain.Entities.Position", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<Guid>("DepartmentId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DepartmentId");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModifiedDate");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Title");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex(new[] { "Title" }, "UK_Positions_Title")
                        .IsUnique();

                    b.ToTable("Positions", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("fa7fc807-9f59-4452-ba36-0900b5186869"),
                            CreatedDate = new DateTime(2024, 8, 18, 12, 56, 33, 496, DateTimeKind.Utc).AddTicks(2259),
                            DepartmentId = new Guid("f5fd7e8f-0a7e-41d1-81ae-945b5b675f5d"),
                            Title = "Yönetici"
                        },
                        new
                        {
                            Id = new Guid("d6d90efc-e099-42e7-8360-2d90e9a26f23"),
                            CreatedDate = new DateTime(2024, 8, 18, 12, 56, 33, 496, DateTimeKind.Utc).AddTicks(2265),
                            DepartmentId = new Guid("34c0160d-6db5-40c5-8597-e81318d38b8b"),
                            Title = "İK Uzmanı"
                        },
                        new
                        {
                            Id = new Guid("990765cd-4d42-4a50-9371-88ed24959cb4"),
                            CreatedDate = new DateTime(2024, 8, 18, 12, 56, 33, 496, DateTimeKind.Utc).AddTicks(2267),
                            DepartmentId = new Guid("78ede17c-6d8a-4f89-b0ef-eee8729c4d20"),
                            Title = "Yazılım Geliştirici"
                        },
                        new
                        {
                            Id = new Guid("9fa7ab59-3aeb-4636-a4d8-21161c7f963a"),
                            CreatedDate = new DateTime(2024, 8, 18, 12, 56, 33, 496, DateTimeKind.Utc).AddTicks(2281),
                            DepartmentId = new Guid("78ede17c-6d8a-4f89-b0ef-eee8729c4d20"),
                            Title = "Sistem Analisti"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Employee", b =>
                {
                    b.HasOne("Domain.Entities.Department", "Department")
                        .WithMany("Employees")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Position", "Position")
                        .WithMany("Employees")
                        .HasForeignKey("PositionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("Position");
                });

            modelBuilder.Entity("Domain.Entities.Position", b =>
                {
                    b.HasOne("Domain.Entities.Department", "Department")
                        .WithMany("Positions")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("Domain.Entities.Department", b =>
                {
                    b.Navigation("Employees");

                    b.Navigation("Positions");
                });

            modelBuilder.Entity("Domain.Entities.Position", b =>
                {
                    b.Navigation("Employees");
                });
#pragma warning restore 612, 618
        }
    }
}
